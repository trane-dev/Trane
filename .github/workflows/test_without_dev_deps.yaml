name: Test without dev or test dependencies
on:
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  tests:
    name: 3.11 test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["latest", "minimal"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'pip'
          cache-dependency-path: "pyproject.toml"
      - name: Build trane and install latest requirements
        if: ${{ matrix.python_version == 'latest' }}
        run: |
          make package
          python -m pip install unpacked_sdist/
      - name: Install minimal requirements
        if: ${{ matrix.python_version == 'minimal' }}
        run: |
          python -m pip install . --no-deps
          python -m pip install -r tests/minimal_requirements.txt
      - name: Run simple usage
        run: |
          import trane
          df = trane.datasets.load_airbnb_reviews()
          entity_col = "location"
          time_col = "date"
          window_size = "1m"
          table_meta = trane.typing.infer_table_meta(df, entity_col, time_col)
          table_meta["location"] = trane.typing.column_schema.ColumnSchema(
              trane.typing.logical_types.Categorical, semantic_tags={"category", "primary_key"}
          )
          cutoff_strategy = trane.CutoffStrategy(
              entity_col=entity_col,
              window_size=window_size,
          )
          problem_generator = trane.PredictionProblemGenerator(
              df=df,
              entity_col=entity_col,
              time_col=time_col,
              cutoff_strategy=cutoff_strategy,
              table_meta=table_meta,
          )
          problems = problem_generator.generate(df, generate_thresholds=True)
          assert len(problems) >= 450
        shell: python
