name: Tests
on:
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  tests:
    name: ${{ matrix.python-version }} ${{ matrix.type_of_tests }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.11"]
        type_of_tests: ["unit tests", "integration tests"]
        exclude:
          - python-version: "3.8"
            type_of_tests: "integration tests"
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: "pyproject.toml"
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: py-${{ matrix.python-version }}-tests-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-v01
      - name: Install core deps (if cache has changed)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install ".[test]"
      - name: Install core deps (if cache has not changed)
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          python -m pip install --no-dependencies .
      - if: ${{ matrix.type_of_tests == 'unit tests' }}
        name: Run unit tests
        run: |
          make unit-tests
      - if: ${{ matrix.type_of_tests == 'integration tests' }}
        name: Run integration tests
        run: |
          make integration-tests
