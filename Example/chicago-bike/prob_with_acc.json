[{"evaluations": [{"problem": "Predict the number of records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1421.1750912537134, "overall_mean": 3465.2, "entity_std": 1421.1750912537134}, "R2": {"DecisionTreeRegressor": -1.3610586627561112, "LinearRegression": -30.068670947282396}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the number of records"}, {"evaluations": [{"problem": "Predict the number of records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 411.18341600799033, "overall_mean": 734.72, "entity_std": 411.18341600799033}, "R2": {"DecisionTreeRegressor": -2.4920068878284822, "LinearRegression": -8.096667352285484}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 779.9429148341563, "overall_mean": 1587.36, "entity_std": 779.9429148341563}, "R2": {"DecisionTreeRegressor": -2.186649944990764, "LinearRegression": -11.585833070491868}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1078.1776150523624, "overall_mean": 2417.52, "entity_std": 1078.1776150523624}, "R2": {"DecisionTreeRegressor": -0.8267697828284808, "LinearRegression": -19.06354261166335}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the number of records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 455.1664310996583, "overall_mean": 834.2, "entity_std": 455.1664310996583}, "R2": {"DecisionTreeRegressor": -9.590687880471972, "LinearRegression": -47.64611059219254}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the number of records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 806.7797260714972, "overall_mean": 1699.44, "entity_std": 806.7797260714972}, "R2": {"DecisionTreeRegressor": -3.3871308329775953, "LinearRegression": -41.378203442018496}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the number of records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1134.0788656879204, "overall_mean": 2606.08, "entity_std": 1134.0788656879204}, "R2": {"DecisionTreeRegressor": -2.6340824036081587, "LinearRegression": -30.641062323511328}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the number of records with <temperature> greater than 37.9 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1452.1775296429842, "overall_mean": 864.68, "entity_std": 1452.1775296429842}, "R2": {"DecisionTreeRegressor": -1.3063835942204327, "LinearRegression": -17.057747442891614}, "N_test": 8, "description": "threshold: 37.9 (keep 25.0%%)"}, {"problem": "Predict the number of records with <temperature> greater than 34.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 2083.5785623777183, "overall_mean": 1776.88, "entity_std": 2083.5785623777183}, "R2": {"DecisionTreeRegressor": -1.1623119526425771, "LinearRegression": -2.983057238006456}, "N_test": 8, "description": "threshold: 34.0 (keep 50.0%%)"}, {"problem": "Predict the number of records with <temperature> greater than 26.6 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1950.9149057813875, "overall_mean": 2681.52, "entity_std": 1950.9149057813875}, "R2": {"DecisionTreeRegressor": -0.7571459403291412, "LinearRegression": -3.743659412153925}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the number of records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 408.29035942574006, "overall_mean": 744.32, "entity_std": 408.29035942574006}, "R2": {"DecisionTreeRegressor": -2.6414633340463234, "LinearRegression": -4.258016783386732}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 792.2334443836615, "overall_mean": 1617.36, "entity_std": 792.2334443836615}, "R2": {"DecisionTreeRegressor": -1.570287010308682, "LinearRegression": -9.81189996714402}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1081.004335976503, "overall_mean": 2432.16, "entity_std": 1081.004335976503}, "R2": {"DecisionTreeRegressor": -0.8380557882719071, "LinearRegression": -18.6937921802209}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <dpcapacity_end> greater than __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the number of records with <from_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the number of records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1142.165757497571, "overall_mean": 2774.32, "entity_std": 1142.165757497571}, "R2": {"DecisionTreeRegressor": -0.9395206263739011, "LinearRegression": -19.35935623955504}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the number of records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 323.6060963579024, "overall_mean": 690.88, "entity_std": 323.6060963579024}, "R2": {"DecisionTreeRegressor": -10.217238197640459, "LinearRegression": -82.10561095130798}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the number of records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the number of records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1421.1247973348436, "overall_mean": 3462.48, "entity_std": 1421.1247973348436}, "R2": {"DecisionTreeRegressor": -1.36238507197061, "LinearRegression": -29.840970671386938}, "N_test": 8, "description": "threshold: Subscriber"}, {"problem": "Predict the number of records with <usertype> equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.166972033986637, "overall_mean": 2.68, "entity_std": 5.166972033986637}, "R2": {"DecisionTreeRegressor": 0.011133314302026798, "LinearRegression": -11.706032235837004}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the number of records with <usertype> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the number of records with <to_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the number of records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 241.48343545676173, "overall_mean": 425.48, "entity_std": 241.48343545676173}, "R2": {"DecisionTreeRegressor": -2.408229014585351, "LinearRegression": -29.63618961750287}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the number of records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 247.37995391704638, "overall_mean": 388.72, "entity_std": 247.37995391704638}, "R2": {"DecisionTreeRegressor": 0.5829984895797774, "LinearRegression": -1.7118477820178533}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the number of records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 165.6666532528499, "overall_mean": 350.2, "entity_std": 165.6666532528499}, "R2": {"DecisionTreeRegressor": -2.777424670433145, "LinearRegression": -13.352263540014476}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the number of records with <hour> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the number of records with <from_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the number of records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 323.6060963579024, "overall_mean": 690.88, "entity_std": 323.6060963579024}, "R2": {"DecisionTreeRegressor": -10.217238197640459, "LinearRegression": -82.10561095130684}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the number of records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1142.165757497571, "overall_mean": 2774.32, "entity_std": 1142.165757497571}, "R2": {"DecisionTreeRegressor": -0.8314318011615349, "LinearRegression": -19.35935623955464}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the number of records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the number of records with <usertype> not equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.149912620617946, "overall_mean": 2.72, "entity_std": 5.149912620617946}, "R2": {"DecisionTreeRegressor": -0.1350271196117614, "LinearRegression": -11.191477945215578}, "N_test": 8, "description": "threshold: Subscriber"}, {"problem": "Predict the number of records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1421.0990710010333, "overall_mean": 3462.52, "entity_std": 1421.0990710010333}, "R2": {"DecisionTreeRegressor": -2.064189122010753, "LinearRegression": -29.83380172039991}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the number of records with <usertype> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the number of records with <to_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the number of records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1210.096971981998, "overall_mean": 3039.72, "entity_std": 1210.096971981998}, "R2": {"DecisionTreeRegressor": -2.234007553328904, "LinearRegression": -40.79273656562881}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the number of records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1215.212742527003, "overall_mean": 3076.48, "entity_std": 1215.212742527003}, "R2": {"DecisionTreeRegressor": -3.4798551777676665, "LinearRegression": -39.108097197417436}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the number of records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1261.9665922677984, "overall_mean": 3115.0, "entity_std": 1261.9665922677984}, "R2": {"DecisionTreeRegressor": -1.230337790692337, "LinearRegression": -32.46402727343986}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the number of records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the number of records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 377.48745356634043, "overall_mean": 1047.68, "entity_std": 377.48745356634043}, "R2": {"DecisionTreeRegressor": -9.795353492963374, "LinearRegression": -86.68623678810967}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 683.7522756086447, "overall_mean": 1877.84, "entity_std": 683.7522756086447}, "R2": {"DecisionTreeRegressor": -6.271460036240024, "LinearRegression": -66.62493392142987}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1045.7818556467694, "overall_mean": 2730.48, "entity_std": 1045.7818556467694}, "R2": {"DecisionTreeRegressor": -3.7666294140754344, "LinearRegression": -41.5602795018531}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the number of records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 302.84372207460405, "overall_mean": 853.8, "entity_std": 302.84372207460405}, "R2": {"DecisionTreeRegressor": -0.32923572058045525, "LinearRegression": -28.787658188104324}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the number of records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 653.1744808242281, "overall_mean": 1765.76, "entity_std": 653.1744808242281}, "R2": {"DecisionTreeRegressor": -1.2267957940799805, "LinearRegression": -17.355578194936584}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the number of records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1022.5067628138211, "overall_mean": 2633.2, "entity_std": 1022.5067628138211}, "R2": {"DecisionTreeRegressor": -0.6752828009154643, "LinearRegression": -21.528935387908323}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the number of records with <temperature> less than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1112.1439374469476, "overall_mean": 783.68, "entity_std": 1112.1439374469476}, "R2": {"DecisionTreeRegressor": -0.4081672056805692, "LinearRegression": -44.59412261778905}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the number of records with <temperature> less than 35.1 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1468.0113819722244, "overall_mean": 1688.32, "entity_std": 1468.0113819722244}, "R2": {"DecisionTreeRegressor": -0.13280998519758147, "LinearRegression": -6.916129009033433}, "N_test": 8, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the number of records with <temperature> less than 39.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1541.800042028797, "overall_mean": 2600.52, "entity_std": 1541.800042028797}, "R2": {"DecisionTreeRegressor": -3.1281694090824255, "LinearRegression": -48.76577681078879}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the number of records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 377.39077678183924, "overall_mean": 1033.04, "entity_std": 377.39077678183924}, "R2": {"DecisionTreeRegressor": -9.25944657961765, "LinearRegression": -72.49730890116132}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 681.267916755222, "overall_mean": 1847.84, "entity_std": 681.267916755222}, "R2": {"DecisionTreeRegressor": -6.639654154281305, "LinearRegression": -66.19071043817858}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the number of records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1051.7054081823485, "overall_mean": 2720.88, "entity_std": 1051.7054081823485}, "R2": {"DecisionTreeRegressor": -3.72463302844361, "LinearRegression": -45.868301363556306}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the number of records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33797.17735565501, "overall_mean": 77556.52, "entity_std": 33797.17735565501}, "R2": {"DecisionTreeRegressor": -1.6155786641251395, "LinearRegression": -23.248859531113293}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 15605.52527821619, "overall_mean": 33831.04, "entity_std": 15605.52527821619}, "R2": {"DecisionTreeRegressor": -5.3727741810449, "LinearRegression": -39.827455579565246}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 70008.81810380128, "overall_mean": 114175.10800000001, "entity_std": 70008.81810380128}, "R2": {"DecisionTreeRegressor": -5.855279184691197, "LinearRegression": -49.999209238174934}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33714.22172024145, "overall_mean": 77729.28, "entity_std": 33714.22172024145}, "R2": {"DecisionTreeRegressor": -1.1518705127186046, "LinearRegression": -21.649893421527203}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 14253.052863944622, "overall_mean": 25595.24, "entity_std": 14253.052863944622}, "R2": {"DecisionTreeRegressor": -2.376684185092686, "LinearRegression": -9.655178070022231}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 23388.931865341776, "overall_mean": 46625.28, "entity_std": 23388.931865341776}, "R2": {"DecisionTreeRegressor": -2.233558003798204, "LinearRegression": -11.780721847186099}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 28954.482095426953, "overall_mean": 62297.16, "entity_std": 28954.482095426953}, "R2": {"DecisionTreeRegressor": -1.6312871640711668, "LinearRegression": -16.86854670909504}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4157.257845842884, "overall_mean": 7385.423333333334, "entity_std": 4157.257845842884}, "R2": {"DecisionTreeRegressor": -3.4086773650710507, "LinearRegression": -17.0167497353068}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7940.56245647904, "overall_mean": 15333.756666666668, "entity_std": 7940.56245647904}, "R2": {"DecisionTreeRegressor": -1.7353681309488693, "LinearRegression": -19.678200785760016}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11139.029199460269, "overall_mean": 23129.020666666667, "entity_std": 11139.029199460269}, "R2": {"DecisionTreeRegressor": -1.5679004611375222, "LinearRegression": -28.522973389526015}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 16280.159954410276, "overall_mean": 23957.904000000002, "entity_std": 16280.159954410276}, "R2": {"DecisionTreeRegressor": -1.286025061633838, "LinearRegression": -26.666998780709413}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33403.3276055411, "overall_mean": 52188.164, "entity_std": 33403.3276055411}, "R2": {"DecisionTreeRegressor": -1.9393814696167686, "LinearRegression": -29.298672595481698}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 49221.27763580397, "overall_mean": 79513.652, "entity_std": 49221.27763580397}, "R2": {"DecisionTreeRegressor": -1.5364811584629732, "LinearRegression": -36.126512422836775}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10390.91719270248, "overall_mean": 18379.12, "entity_std": 10390.91719270248}, "R2": {"DecisionTreeRegressor": -2.3734246168716493, "LinearRegression": -7.441874227284684}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 19486.636122389107, "overall_mean": 38376.56, "entity_std": 19486.636122389107}, "R2": {"DecisionTreeRegressor": -2.2412187632733254, "LinearRegression": -8.858794228047737}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 26362.31996631556, "overall_mean": 56472.56, "entity_std": 26362.31996631556}, "R2": {"DecisionTreeRegressor": -1.640824131654231, "LinearRegression": -13.704911760716596}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10216.478543529565, "overall_mean": 18297.36, "entity_std": 10216.478543529565}, "R2": {"DecisionTreeRegressor": -7.996513275185056, "LinearRegression": -42.37973469815788}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 18915.573987336466, "overall_mean": 38564.36, "entity_std": 18915.573987336466}, "R2": {"DecisionTreeRegressor": -2.8093010556666407, "LinearRegression": -33.85587645226914}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 27181.229911657785, "overall_mean": 59332.36, "entity_std": 27181.229911657785}, "R2": {"DecisionTreeRegressor": -2.158353340944666, "LinearRegression": -24.752694577908922}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 9150.706522268734, "overall_mean": 15768.558, "entity_std": 9150.706522268734}, "R2": {"DecisionTreeRegressor": -14.103037174127767, "LinearRegression": -50.618649214166894}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 12595.651403419337, "overall_mean": 24629.880666666664, "entity_std": 12595.651403419337}, "R2": {"DecisionTreeRegressor": -3.2884889271461004, "LinearRegression": -47.399448460223724}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 14597.921697071572, "overall_mean": 30583.650666666672, "entity_std": 14597.921697071572}, "R2": {"DecisionTreeRegressor": -5.202834191556433, "LinearRegression": -40.84198461606706}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 24380.69585720637, "overall_mean": 28814.22, "entity_std": 24380.69585720637}, "R2": {"DecisionTreeRegressor": -25.6406619995543, "LinearRegression": -66.13150319624525}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 41143.284467645506, "overall_mean": 57354.780000000006, "entity_std": 41143.284467645506}, "R2": {"DecisionTreeRegressor": -12.610601825228287, "LinearRegression": -65.4549148189352}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 56359.5138592896, "overall_mean": 86672.712, "entity_std": 56359.5138592896}, "R2": {"DecisionTreeRegressor": -6.558413132703873, "LinearRegression": -55.05094860839417}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10247.998283684477, "overall_mean": 18427.76, "entity_std": 10247.998283684477}, "R2": {"DecisionTreeRegressor": -8.095471563290728, "LinearRegression": -42.706289151284594}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 18799.258644361485, "overall_mean": 38572.68, "entity_std": 18799.258644361485}, "R2": {"DecisionTreeRegressor": -2.849101259109569, "LinearRegression": -33.241710391401945}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 27068.369830368432, "overall_mean": 59418.92, "entity_std": 27068.369830368432}, "R2": {"DecisionTreeRegressor": -1.3117813378219703, "LinearRegression": -22.310290808088403}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 41382.01199190215, "overall_mean": 68171.04545454546, "entity_std": 41382.01199190215}, "R2": {"DecisionTreeRegressor": -0.44850312549396243, "LinearRegression": -19.719847316555786}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 19158.450878684565, "overall_mean": 30176.5446969697, "entity_std": 19158.450878684565}, "R2": {"DecisionTreeRegressor": -2.080485974358189, "LinearRegression": -48.64748701922106}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 76869.90642736209, "overall_mean": 112629.93636363634, "entity_std": 76869.90642736209}, "R2": {"DecisionTreeRegressor": -3.0165236595730542, "LinearRegression": -16.264129829224355}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 41310.07438870087, "overall_mean": 68224.0, "entity_std": 41310.07438870087}, "R2": {"DecisionTreeRegressor": -0.6876390327529668, "LinearRegression": -13.14447223250161}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10310.162100452155, "overall_mean": 18526.32, "entity_std": 10310.162100452155}, "R2": {"DecisionTreeRegressor": -2.38459923816451, "LinearRegression": -4.406999354857023}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 19755.4554540866, "overall_mean": 38978.04, "entity_std": 19755.4554540866}, "R2": {"DecisionTreeRegressor": -2.2394255236041936, "LinearRegression": -8.435135815581422}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 26483.079126113716, "overall_mean": 56679.4, "entity_std": 26483.079126113716}, "R2": {"DecisionTreeRegressor": -0.7733302559103188, "LinearRegression": -14.75469388087089}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4067.5823997501675, "overall_mean": 7391.676000000001, "entity_std": 4067.5823997501675}, "R2": {"DecisionTreeRegressor": -2.992341882611379, "LinearRegression": -12.458985637213878}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7956.95798722228, "overall_mean": 15527.551333333333, "entity_std": 7956.95798722228}, "R2": {"DecisionTreeRegressor": -1.504166631919531, "LinearRegression": -18.475982560618686}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11276.31900359459, "overall_mean": 23422.404, "entity_std": 11276.31900359459}, "R2": {"DecisionTreeRegressor": -2.633280894078387, "LinearRegression": -28.95499800112759}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 16165.12407167183, "overall_mean": 24249.316000000003, "entity_std": 16165.12407167183}, "R2": {"DecisionTreeRegressor": -1.1229789578138782, "LinearRegression": -22.04848172577852}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33630.01525629151, "overall_mean": 52834.04, "entity_std": 33630.01525629151}, "R2": {"DecisionTreeRegressor": -1.805124638188571, "LinearRegression": -29.045121104708524}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 49349.30484910198, "overall_mean": 79774.6, "entity_std": 49349.30484910198}, "R2": {"DecisionTreeRegressor": -1.0913730108434665, "LinearRegression": -39.84481282934017}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 14049.244230206832, "overall_mean": 25769.4, "entity_std": 14049.244230206832}, "R2": {"DecisionTreeRegressor": -2.578248821896087, "LinearRegression": -5.084248257791123}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 23541.913759080846, "overall_mean": 47283.8, "entity_std": 23541.913759080846}, "R2": {"DecisionTreeRegressor": -2.610278307541909, "LinearRegression": -9.09193377378823}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 28919.993438284182, "overall_mean": 62662.64, "entity_std": 28919.993438284182}, "R2": {"DecisionTreeRegressor": -1.4520384584705144, "LinearRegression": -14.968049719371024}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <from_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 27843.80801399119, "overall_mean": 62838.2, "entity_std": 27843.80801399119}, "R2": {"DecisionTreeRegressor": -3.517850183704402, "LinearRegression": -14.353551582291393}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7068.078809521014, "overall_mean": 14718.32, "entity_std": 7068.078809521014}, "R2": {"DecisionTreeRegressor": -8.561029080422777, "LinearRegression": -73.89065167838208}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11814.515311842539, "overall_mean": 26512.304, "entity_std": 11814.515311842539}, "R2": {"DecisionTreeRegressor": -1.4432358879857712, "LinearRegression": -28.45154153735706}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <tripduration> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4331.450062678985, "overall_mean": 7318.736000000001, "entity_std": 4331.450062678985}, "R2": {"DecisionTreeRegressor": -22.320078616483837, "LinearRegression": -61.40937269735208}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 53548.11939316875, "overall_mean": 90683.08799999999, "entity_std": 53548.11939316875}, "R2": {"DecisionTreeRegressor": -3.3895702482389716, "LinearRegression": -39.96953356957103}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <temperature> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 18033.560717883753, "overall_mean": 23492.02, "entity_std": 18033.560717883753}, "R2": {"DecisionTreeRegressor": -25.637311395525074, "LinearRegression": -88.04418054969247}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 27766.4006872767, "overall_mean": 62964.44, "entity_std": 27766.4006872767}, "R2": {"DecisionTreeRegressor": -2.9970569864534387, "LinearRegression": -13.02137578626899}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7037.130976072564, "overall_mean": 14764.84, "entity_std": 7037.130976072564}, "R2": {"DecisionTreeRegressor": -8.428470441515081, "LinearRegression": -72.3049380948187}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33800.71176528683, "overall_mean": 77494.2, "entity_std": 33800.71176528683}, "R2": {"DecisionTreeRegressor": -0.9893628440082068, "LinearRegression": -23.065740118797482}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 15598.906766371318, "overall_mean": 33795.50466666667, "entity_std": 15598.906766371318}, "R2": {"DecisionTreeRegressor": -4.8129149113805, "LinearRegression": -39.501512314796926}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 70006.68640186237, "overall_mean": 114087.23599999999, "entity_std": 70006.68640186237}, "R2": {"DecisionTreeRegressor": -5.854257993189246, "LinearRegression": -50.22318386353243}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33715.49336551372, "overall_mean": 77668.6, "entity_std": 33715.49336551372}, "R2": {"DecisionTreeRegressor": -1.1389740550261211, "LinearRegression": -21.512091585767884}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <usertype> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <to_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6164.436727682425, "overall_mean": 10207.48, "entity_std": 6164.436727682425}, "R2": {"DecisionTreeRegressor": -1.9851127950678307, "LinearRegression": -26.414513421777244}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5657.602838800192, "overall_mean": 8754.72, "entity_std": 5657.602838800192}, "R2": {"DecisionTreeRegressor": 0.17064775084701034, "LinearRegression": -1.5894514517570548}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4163.896569320616, "overall_mean": 8290.0, "entity_std": 4163.896569320616}, "R2": {"DecisionTreeRegressor": -3.0291394683275916, "LinearRegression": -9.385723400891584}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 2559.7032652795256, "overall_mean": 4335.2553333333335, "entity_std": 2559.7032652795256}, "R2": {"DecisionTreeRegressor": -2.2570837433583173, "LinearRegression": -40.51382326028578}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <tripduration> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 2630.831104348248, "overall_mean": 3958.9206666666664, "entity_std": 2630.831104348248}, "R2": {"DecisionTreeRegressor": 0.513487384791296, "LinearRegression": -3.485430218879108}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <tripduration> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1812.4146133818276, "overall_mean": 3548.79, "entity_std": 1812.4146133818276}, "R2": {"DecisionTreeRegressor": -3.1785737712079767, "LinearRegression": -29.17562333087943}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 9546.723797471885, "overall_mean": 14014.328000000001, "entity_std": 9546.723797471885}, "R2": {"DecisionTreeRegressor": -0.3342044428928346, "LinearRegression": -40.69125608191706}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <temperature> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 9340.979157459673, "overall_mean": 12042.047999999999, "entity_std": 9340.979157459673}, "R2": {"DecisionTreeRegressor": 0.7377289028450923, "LinearRegression": -3.5691793752052625}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <temperature> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7570.3098882241275, "overall_mean": 11948.616000000002, "entity_std": 7570.3098882241275}, "R2": {"DecisionTreeRegressor": -4.214281320234919, "LinearRegression": -90.29224427549842}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5580.670649877127, "overall_mean": 9545.24, "entity_std": 5580.670649877127}, "R2": {"DecisionTreeRegressor": -1.7952785740146302, "LinearRegression": -25.835609574157907}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6239.432983981797, "overall_mean": 9487.28, "entity_std": 6239.432983981797}, "R2": {"DecisionTreeRegressor": 0.5923591398553196, "LinearRegression": -1.5639770311213992}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4294.696732296706, "overall_mean": 8456.76, "entity_std": 4294.696732296706}, "R2": {"DecisionTreeRegressor": -2.468243435617184, "LinearRegression": -6.517710499212435}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <hour> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <from_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7068.078809521014, "overall_mean": 14718.32, "entity_std": 7068.078809521014}, "R2": {"DecisionTreeRegressor": -8.561029080422777, "LinearRegression": -73.89065167838208}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 27843.80801399119, "overall_mean": 62838.2, "entity_std": 27843.80801399119}, "R2": {"DecisionTreeRegressor": -2.167589936263288, "LinearRegression": -14.353551582291393}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4331.450062678985, "overall_mean": 7318.736000000001, "entity_std": 4331.450062678985}, "R2": {"DecisionTreeRegressor": -22.320078616483837, "LinearRegression": -61.40937269735234}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <tripduration> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11814.515311842539, "overall_mean": 26512.304, "entity_std": 11814.515311842539}, "R2": {"DecisionTreeRegressor": -2.1778698032207786, "LinearRegression": -28.45154153735649}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 18033.560717883753, "overall_mean": 23492.02, "entity_std": 18033.560717883753}, "R2": {"DecisionTreeRegressor": -25.757648750194605, "LinearRegression": -88.04418054969314}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <temperature> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 53548.11939316875, "overall_mean": 90683.08799999999, "entity_std": 53548.11939316875}, "R2": {"DecisionTreeRegressor": -2.916164157774383, "LinearRegression": -39.969533569570636}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7037.130976072564, "overall_mean": 14764.84, "entity_std": 7037.130976072564}, "R2": {"DecisionTreeRegressor": -8.578064331569097, "LinearRegression": -72.3049380948187}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 27766.4006872767, "overall_mean": 62964.44, "entity_std": 27766.4006872767}, "R2": {"DecisionTreeRegressor": -2.199903571034391, "LinearRegression": -13.02137578626899}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33800.242777826315, "overall_mean": 77494.8, "entity_std": 33800.242777826315}, "R2": {"DecisionTreeRegressor": -1.991581896558597, "LinearRegression": -23.06187015975293}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 15598.821923053663, "overall_mean": 33795.66266666666, "entity_std": 15598.821923053663}, "R2": {"DecisionTreeRegressor": -2.512330765511968, "LinearRegression": -39.49836766505398}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 70006.58807547347, "overall_mean": 114088.87599999999, "entity_std": 70006.58807547347}, "R2": {"DecisionTreeRegressor": -2.440583905477261, "LinearRegression": -50.21394792248204}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 33715.01725937568, "overall_mean": 77669.2, "entity_std": 33715.01725937568}, "R2": {"DecisionTreeRegressor": -1.1978921844121055, "LinearRegression": -21.508278058347276}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <usertype> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <to_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 28270.411785440974, "overall_mean": 67349.04, "entity_std": 28270.411785440974}, "R2": {"DecisionTreeRegressor": -1.5778026421870914, "LinearRegression": -31.11468429421353}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 28900.686757238138, "overall_mean": 68801.8, "entity_std": 28900.686757238138}, "R2": {"DecisionTreeRegressor": -1.5359996405042575, "LinearRegression": -30.836456347558045}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 29780.7748228551, "overall_mean": 69266.52, "entity_std": 29780.7748228551}, "R2": {"DecisionTreeRegressor": -1.3047632881907798, "LinearRegression": -25.52244890788494}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 13561.380679616102, "overall_mean": 29495.784666666666, "entity_std": 13561.380679616102}, "R2": {"DecisionTreeRegressor": -6.441196342461952, "LinearRegression": -51.4296484854448}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <tripduration> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 13714.640725697871, "overall_mean": 29872.119333333332, "entity_std": 13714.640725697871}, "R2": {"DecisionTreeRegressor": -3.9237508844829962, "LinearRegression": -45.94048782725955}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <tripduration> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 13862.148960790877, "overall_mean": 30282.25, "entity_std": 13862.148960790877}, "R2": {"DecisionTreeRegressor": -2.913448586407849, "LinearRegression": -40.8287400980209}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 62066.821272618756, "overall_mean": 100160.78, "entity_std": 62066.821272618756}, "R2": {"DecisionTreeRegressor": -6.135370717092807, "LinearRegression": -61.47891215928426}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <temperature> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 62886.33647778188, "overall_mean": 102133.06, "entity_std": 62886.33647778188}, "R2": {"DecisionTreeRegressor": -9.42412069638613, "LinearRegression": -58.16060841853513}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <temperature> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 62730.071366150514, "overall_mean": 102226.492, "entity_std": 62730.071366150514}, "R2": {"DecisionTreeRegressor": -1.6738906821354642, "LinearRegression": -45.240946867589}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 28714.237585532373, "overall_mean": 68184.04, "entity_std": 28714.237585532373}, "R2": {"DecisionTreeRegressor": -2.2551512915828282, "LinearRegression": -28.397702417306295}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 28287.111158264288, "overall_mean": 68242.0, "entity_std": 28287.111158264288}, "R2": {"DecisionTreeRegressor": -1.6671914453387966, "LinearRegression": -28.88103237773315}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 29610.5704573485, "overall_mean": 69272.52, "entity_std": 29610.5704573485}, "R2": {"DecisionTreeRegressor": -1.1467397939823871, "LinearRegression": -24.251932471292424}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5508.327817986144, "overall_mean": 15259.36, "entity_std": 5508.327817986144}, "R2": {"DecisionTreeRegressor": -6.953194787846734, "LinearRegression": -85.2529081477247}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11301.533174857295, "overall_mean": 30931.24, "entity_std": 11301.533174857295}, "R2": {"DecisionTreeRegressor": -5.358396381126194, "LinearRegression": -63.791740708789405}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 20316.590707143754, "overall_mean": 51961.28, "entity_std": 20316.590707143754}, "R2": {"DecisionTreeRegressor": -2.1364030312518136, "LinearRegression": -34.91312688913395}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4753.872985812445, "overall_mean": 10702.019333333334, "entity_std": 4753.872985812445}, "R2": {"DecisionTreeRegressor": -14.565625181139525, "LinearRegression": -86.97398950005663}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8060.069414152434, "overall_mean": 18497.283333333336, "entity_std": 8060.069414152434}, "R2": {"DecisionTreeRegressor": -10.933247692553593, "LinearRegression": -73.63610127341057}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11836.987173452919, "overall_mean": 26445.616666666665, "entity_std": 11836.987173452919}, "R2": {"DecisionTreeRegressor": -7.528406775426108, "LinearRegression": -48.795007451925166}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 22085.269080816382, "overall_mean": 34661.456, "entity_std": 22085.269080816382}, "R2": {"DecisionTreeRegressor": -20.41956520564911, "LinearRegression": -96.91082596776329}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 38414.84234513613, "overall_mean": 61986.944, "entity_std": 38414.84234513613}, "R2": {"DecisionTreeRegressor": -14.527088163137948, "LinearRegression": -81.56181165947874}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 55374.82186044109, "overall_mean": 90217.204, "entity_std": 55374.82186044109}, "R2": {"DecisionTreeRegressor": -9.26656471459094, "LinearRegression": -59.85819454090092}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8000.606994572349, "overall_mean": 21256.72, "entity_std": 8000.606994572349}, "R2": {"DecisionTreeRegressor": -6.927107241141765, "LinearRegression": -70.72461473782694}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 14950.826167192234, "overall_mean": 39352.72, "entity_std": 14950.826167192234}, "R2": {"DecisionTreeRegressor": -2.8898080717732877, "LinearRegression": -50.03383241098989}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 23906.648574285773, "overall_mean": 59350.16, "entity_std": 23906.648574285773}, "R2": {"DecisionTreeRegressor": -1.6976959503796576, "LinearRegression": -29.40626747332177}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6875.849557865559, "overall_mean": 18106.76, "entity_std": 6875.849557865559}, "R2": {"DecisionTreeRegressor": 0.15979714550337032, "LinearRegression": -18.19593715719609}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 15723.74841742261, "overall_mean": 38992.16, "entity_std": 15723.74841742261}, "R2": {"DecisionTreeRegressor": 0.3044382937734569, "LinearRegression": -11.912889034728119}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 25050.303788976293, "overall_mean": 59309.6, "entity_std": 25050.303788976293}, "R2": {"DecisionTreeRegressor": -0.6026102433468479, "LinearRegression": -15.371287379350512}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1154.5632044967385, "overall_mean": 3220.08, "entity_std": 1154.5632044967385}, "R2": {"DecisionTreeRegressor": 0.2087778578714986, "LinearRegression": -25.190800665351098}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 3462.8094896680514, "overall_mean": 9201.159333333333, "entity_std": 3462.8094896680514}, "R2": {"DecisionTreeRegressor": -0.6537584327666599, "LinearRegression": -13.478664227632882}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 7275.498842652524, "overall_mean": 18090.78866666667, "entity_std": 7275.498842652524}, "R2": {"DecisionTreeRegressor": -0.7404003682118129, "LinearRegression": -21.726525588248112}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 14307.527846528903, "overall_mean": 27327.52, "entity_std": 14307.527846528903}, "R2": {"DecisionTreeRegressor": -1.0598710223875267, "LinearRegression": -33.82249272528801}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 30524.355447432725, "overall_mean": 56820.32799999999, "entity_std": 30524.355447432725}, "R2": {"DecisionTreeRegressor": -1.4016268172614992, "LinearRegression": -33.51716168240899}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 48008.73545969733, "overall_mean": 85436.80000000002, "entity_std": 48008.73545969733}, "R2": {"DecisionTreeRegressor": -2.0722412580049574, "LinearRegression": -40.94313149630229}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6922.643317577471, "overall_mean": 18199.76, "entity_std": 6922.643317577471}, "R2": {"DecisionTreeRegressor": -0.07713176832025415, "LinearRegression": -20.564298330180122}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 15764.749507683273, "overall_mean": 39156.6, "entity_std": 15764.749507683273}, "R2": {"DecisionTreeRegressor": -0.06186191197742863, "LinearRegression": -10.420179730340172}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 24929.621128416693, "overall_mean": 59349.56, "entity_std": 24929.621128416693}, "R2": {"DecisionTreeRegressor": -0.8684584042459963, "LinearRegression": -13.649075085820256}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 31456.45166778192, "overall_mean": 46860.65, "entity_std": 31456.45166778192}, "R2": {"DecisionTreeRegressor": -0.5287807194018033, "LinearRegression": -474.1061061804372}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 33165.32799307838, "overall_mean": 63535.739130434784, "entity_std": 33165.32799307838}, "R2": {"DecisionTreeRegressor": -0.5441317168386783, "LinearRegression": -6.99280067743119}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 12726.109496933062, "overall_mean": 19712.000833333335, "entity_std": 12726.109496933062}, "R2": {"DecisionTreeRegressor": -0.36064769797745533, "LinearRegression": -583.9555418309009}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 13761.79178770941, "overall_mean": 26836.88768115942, "entity_std": 13761.79178770941}, "R2": {"DecisionTreeRegressor": -4.2243890768623915, "LinearRegression": -20.07009240016271}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 38524.57528202323, "overall_mean": 53460.335, "entity_std": 38524.57528202323}, "R2": {"DecisionTreeRegressor": -0.6900162967414549, "LinearRegression": -12.156331905963718}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 52078.099832896936, "overall_mean": 82446.27826086957, "entity_std": 52078.099832896936}, "R2": {"DecisionTreeRegressor": -1.6635086510588568, "LinearRegression": -317.25020637101505}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 31547.793438646386, "overall_mean": 47240.55, "entity_std": 31547.793438646386}, "R2": {"DecisionTreeRegressor": -0.1310725183597803, "LinearRegression": -443.8184396966931}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 33029.14035493524, "overall_mean": 63702.608695652176, "entity_std": 33029.14035493524}, "R2": {"DecisionTreeRegressor": -0.38830207502909264, "LinearRegression": -5.71274958065945}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8002.868742244871, "overall_mean": 20877.12, "entity_std": 8002.868742244871}, "R2": {"DecisionTreeRegressor": -5.630078713332291, "LinearRegression": -62.92669640707973}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 14954.634040644392, "overall_mean": 38578.48, "entity_std": 14954.634040644392}, "R2": {"DecisionTreeRegressor": -4.4491565113202, "LinearRegression": -52.931430746863924}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 24125.902775233095, "overall_mean": 59030.2, "entity_std": 24125.902775233095}, "R2": {"DecisionTreeRegressor": -1.2386489018324482, "LinearRegression": -35.756806698880474}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_start> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the total <tripduration> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4673.611185890604, "overall_mean": 10408.635999999999, "entity_std": 4673.611185890604}, "R2": {"DecisionTreeRegressor": -15.28475283141246, "LinearRegression": -62.3340722341891}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8169.1470122606515, "overall_mean": 18303.488666666668, "entity_std": 8169.1470122606515}, "R2": {"DecisionTreeRegressor": -11.504706722882366, "LinearRegression": -62.89681274763759}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <tripduration> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11924.559765346736, "overall_mean": 26439.363999999998, "entity_std": 11924.559765346736}, "R2": {"DecisionTreeRegressor": -7.121013401025626, "LinearRegression": -51.047546417412285}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <tripduration> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the total <temperature> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 22006.631520974217, "overall_mean": 34400.508, "entity_std": 22006.631520974217}, "R2": {"DecisionTreeRegressor": -19.777210025476805, "LinearRegression": -77.07521311191311}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 38502.09619941979, "overall_mean": 61341.068, "entity_std": 38502.09619941979}, "R2": {"DecisionTreeRegressor": -15.341300876941666, "LinearRegression": -73.59113542191679}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <temperature> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 55538.16152697112, "overall_mean": 89925.79200000002, "entity_std": 55538.16152697112}, "R2": {"DecisionTreeRegressor": -6.442193816557455, "LinearRegression": -58.77493781212647}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <temperature> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5518.673839827826, "overall_mean": 15066.64, "entity_std": 5518.673839827826}, "R2": {"DecisionTreeRegressor": -4.273005039344703, "LinearRegression": -73.8818997553283}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11265.266594697172, "overall_mean": 30445.48, "entity_std": 11265.266594697172}, "R2": {"DecisionTreeRegressor": -6.366390115783978, "LinearRegression": -65.68816935993145}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 20491.094856683474, "overall_mean": 51959.88, "entity_std": 20491.094856683474}, "R2": {"DecisionTreeRegressor": -2.0072501151624547, "LinearRegression": -39.898885045959865}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the total <dpcapacity_end> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3124990288441583, "overall_mean": 22.0091783061126, "entity_std": 1.3124990288441583}, "R2": {"DecisionTreeRegressor": -0.0012838340186471786, "LinearRegression": -2.6433776735820675}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.789316958470966, "overall_mean": 9.579769875127692, "entity_std": 0.789316958470966}, "R2": {"DecisionTreeRegressor": -71.04001939155323, "LinearRegression": -67.21543031502756}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.367038882708925, "overall_mean": 30.58912748803091, "entity_std": 10.367038882708925}, "R2": {"DecisionTreeRegressor": -8.239033904898987, "LinearRegression": -3.456723268918531}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3171377672818634, "overall_mean": 22.07598828742099, "entity_std": 1.3171377672818634}, "R2": {"DecisionTreeRegressor": -0.2049572976741978, "LinearRegression": -13.300526986201707}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.5286635977073317, "overall_mean": 34.9908096355593, "entity_std": 0.5286635977073317}, "R2": {"DecisionTreeRegressor": -0.7179690787488187, "LinearRegression": -71.17630907850113}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7577230874621307, "overall_mean": 29.080969125766018, "entity_std": 0.7577230874621307}, "R2": {"DecisionTreeRegressor": 0.5854641920689327, "LinearRegression": -0.36866957478049844}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.069301340102663, "overall_mean": 25.393177320016743, "entity_std": 1.069301340102663}, "R2": {"DecisionTreeRegressor": -0.20914020322532623, "LinearRegression": -2.94253090512571}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.1379804532698976, "overall_mean": 10.118707873173397, "entity_std": 1.1379804532698976}, "R2": {"DecisionTreeRegressor": -376.14445247108955, "LinearRegression": -1518.4823198596316}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9368830536077416, "overall_mean": 9.541015321889141, "entity_std": 0.9368830536077416}, "R2": {"DecisionTreeRegressor": -132.41682925276245, "LinearRegression": -149.6133471017325}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.8276247159106259, "overall_mean": 9.428018831366867, "entity_std": 0.8276247159106259}, "R2": {"DecisionTreeRegressor": -109.93902115704633, "LinearRegression": -124.65849277894334}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.565169034728264, "overall_mean": 30.58995381032925, "entity_std": 10.565169034728264}, "R2": {"DecisionTreeRegressor": -8.80964587774938, "LinearRegression": -5.530747605068123}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.409243580071069, "overall_mean": 30.651789586399953, "entity_std": 10.409243580071069}, "R2": {"DecisionTreeRegressor": -16.549871720102647, "LinearRegression": -4.417107486772448}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.3558412018569, "overall_mean": 30.62084185131232, "entity_std": 10.3558412018569}, "R2": {"DecisionTreeRegressor": -8.850896929060973, "LinearRegression": -3.7400724604496878}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7779711586578784, "overall_mean": 24.74941602197495, "entity_std": 0.7779711586578784}, "R2": {"DecisionTreeRegressor": -0.6484171248724264, "LinearRegression": -0.7610738951377427}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.1527911368269752, "overall_mean": 23.762302615087478, "entity_std": 1.1527911368269752}, "R2": {"DecisionTreeRegressor": -1.1671752954014565, "LinearRegression": -10.453533509939867}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2730932936816026, "overall_mean": 22.96619163171663, "entity_std": 1.2730932936816026}, "R2": {"DecisionTreeRegressor": -1.327040065945797, "LinearRegression": -15.235224657923137}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.928129076008871, "overall_mean": 21.659031121843487, "entity_std": 0.928129076008871}, "R2": {"DecisionTreeRegressor": 0.007454044908307922, "LinearRegression": -9.666416178090994}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3543394096938106, "overall_mean": 22.339635207818773, "entity_std": 1.3543394096938106}, "R2": {"DecisionTreeRegressor": -3.2954624168146616, "LinearRegression": -1.1308601255223794}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.4463003675498558, "overall_mean": 22.36876860767957, "entity_std": 1.4463003675498558}, "R2": {"DecisionTreeRegressor": -0.11562024947428373, "LinearRegression": -0.2893567025382924}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.4930350630443638, "overall_mean": 18.759363073356088, "entity_std": 0.4930350630443638}, "R2": {"DecisionTreeRegressor": -308.3577295804059, "LinearRegression": -194.60744429772458}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.6192291031748586, "overall_mean": 14.353591715487818, "entity_std": 0.6192291031748586}, "R2": {"DecisionTreeRegressor": -125.78379994191145, "LinearRegression": -89.86864468398588}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7147117374883611, "overall_mean": 11.577214990238886, "entity_std": 0.7147117374883611}, "R2": {"DecisionTreeRegressor": -128.490047294761, "LinearRegression": -83.45699709570991}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.462544072251566, "overall_mean": 30.61975823548289, "entity_std": 10.462544072251566}, "R2": {"DecisionTreeRegressor": -9.26633171097322, "LinearRegression": -4.64860042068471}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.406870283819101, "overall_mean": 30.62581589806759, "entity_std": 10.406870283819101}, "R2": {"DecisionTreeRegressor": -16.538774582772664, "LinearRegression": -4.2486466223258965}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.398167883937436, "overall_mean": 30.602161653712695, "entity_std": 10.398167883937436}, "R2": {"DecisionTreeRegressor": -8.84545804646948, "LinearRegression": -3.860894562009702}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.0602318115169769, "overall_mean": 21.795929977772673, "entity_std": 1.0602318115169769}, "R2": {"DecisionTreeRegressor": 0.08578263215438531, "LinearRegression": -8.03069999786921}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.334324217616524, "overall_mean": 22.36129067767347, "entity_std": 1.334324217616524}, "R2": {"DecisionTreeRegressor": 0.0116606884303736, "LinearRegression": -10.544843543817004}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.4600943173769882, "overall_mean": 22.420543279913105, "entity_std": 1.4600943173769882}, "R2": {"DecisionTreeRegressor": -0.33214689113870577, "LinearRegression": -11.107683608793122}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 1.320825563333545, "overall_mean": 21.887002874792167, "entity_std": 1.320825563333545}, "R2": {"DecisionTreeRegressor": 0.43404293090546564, "LinearRegression": -0.45980191358416467}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 0.8404737365294211, "overall_mean": 9.704151653535213, "entity_std": 0.8404737365294211}, "R2": {"DecisionTreeRegressor": -71.5004869163977, "LinearRegression": -186.71536311075494}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 6.356583487096438, "overall_mean": 34.39091221522147, "entity_std": 6.356583487096438}, "R2": {"DecisionTreeRegressor": -9.021475978341119, "LinearRegression": -13.725649467525011}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 1.4163987788350416, "overall_mean": 21.878737290170218, "entity_std": 1.4163987788350416}, "R2": {"DecisionTreeRegressor": 0.29491486322104754, "LinearRegression": -8.439420773050477}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7198384945528606, "overall_mean": 24.606715994743773, "entity_std": 0.7198384945528606}, "R2": {"DecisionTreeRegressor": 0.15387598073674158, "LinearRegression": -4.679574200537998}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.0956215279665351, "overall_mean": 23.696793990677605, "entity_std": 1.0956215279665351}, "R2": {"DecisionTreeRegressor": -0.19856236588679388, "LinearRegression": -0.5943705929776941}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2690265400789449, "overall_mean": 22.894133621034708, "entity_std": 1.2690265400789449}, "R2": {"DecisionTreeRegressor": -0.06897216608726575, "LinearRegression": -1.817824736182312}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.1616658458707296, "overall_mean": 9.986334885148553, "entity_std": 1.1616658458707296}, "R2": {"DecisionTreeRegressor": -188.36791433020807, "LinearRegression": -134.9912317681178}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9068552090241506, "overall_mean": 9.476464986137234, "entity_std": 0.9068552090241506}, "R2": {"DecisionTreeRegressor": -142.2987939135255, "LinearRegression": -76.56932469195321}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.8350536320223596, "overall_mean": 9.471429597190612, "entity_std": 0.8350536320223596}, "R2": {"DecisionTreeRegressor": -90.67835496130505, "LinearRegression": -73.11465318072004}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.489138042933597, "overall_mean": 30.65507026958311, "entity_std": 10.489138042933597}, "R2": {"DecisionTreeRegressor": -14.902205200596274, "LinearRegression": -5.340374468956881}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.475490136651645, "overall_mean": 30.51985207703214, "entity_std": 10.475490136651645}, "R2": {"DecisionTreeRegressor": -15.25165628194717, "LinearRegression": -4.037822998458642}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.41596637813405, "overall_mean": 30.549748505850776, "entity_std": 10.41596637813405}, "R2": {"DecisionTreeRegressor": -15.759081988677575, "LinearRegression": -3.640705963928692}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.5128563949250119, "overall_mean": 34.775625857694195, "entity_std": 0.5128563949250119}, "R2": {"DecisionTreeRegressor": -0.41788970322070407, "LinearRegression": -204.39673188738928}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7037284266672169, "overall_mean": 28.983031938261014, "entity_std": 0.7037284266672169}, "R2": {"DecisionTreeRegressor": 0.07188604715058455, "LinearRegression": -0.7733196673002365}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.0787116853828465, "overall_mean": 25.41170303859255, "entity_std": 1.0787116853828465}, "R2": {"DecisionTreeRegressor": -0.22246926434812853, "LinearRegression": -6.953165133726228}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <from_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.4653930124164936, "overall_mean": 22.192667955848204, "entity_std": 1.4653930124164936}, "R2": {"DecisionTreeRegressor": -0.010370911175676678, "LinearRegression": -4.813956999295546}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7019898602989233, "overall_mean": 21.147729519121214, "entity_std": 0.7019898602989233}, "R2": {"DecisionTreeRegressor": 0.10745171944796139, "LinearRegression": -4.904191409087592}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7313357697600911, "overall_mean": 9.409232896981088, "entity_std": 0.7313357697600911}, "R2": {"DecisionTreeRegressor": -65.76716485377938, "LinearRegression": -78.86486517043261}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <tripduration> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9151726924732095, "overall_mean": 10.228991422527463, "entity_std": 0.9151726924732095}, "R2": {"DecisionTreeRegressor": -45.06233050870332, "LinearRegression": -25.043267839418206}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.358930545219648, "overall_mean": 30.57690765788824, "entity_std": 10.358930545219648}, "R2": {"DecisionTreeRegressor": -8.161135446319596, "LinearRegression": -3.3333031375952764}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <temperature> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.381373011358267, "overall_mean": 30.622769597330112, "entity_std": 10.381373011358267}, "R2": {"DecisionTreeRegressor": -9.449356459544136, "LinearRegression": -3.7496280565304314}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.4680913364667887, "overall_mean": 22.25646398116883, "entity_std": 1.4680913364667887}, "R2": {"DecisionTreeRegressor": -0.34508823821006307, "LinearRegression": -13.256838580643524}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7267926706471617, "overall_mean": 21.222451700498077, "entity_std": 0.7267926706471617}, "R2": {"DecisionTreeRegressor": 0.03008243827309343, "LinearRegression": -12.598750599008028}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3159756705739944, "overall_mean": 22.006868301209362, "entity_std": 1.3159756705739944}, "R2": {"DecisionTreeRegressor": -0.002548854396277056, "LinearRegression": -2.789348312655347}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7897054576552702, "overall_mean": 9.577412616862112, "entity_std": 0.7897054576552702}, "R2": {"DecisionTreeRegressor": -70.17389767354271, "LinearRegression": -65.86751249256073}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.36729500708402, "overall_mean": 30.587837531584736, "entity_std": 10.36729500708402}, "R2": {"DecisionTreeRegressor": -15.649362387807042, "LinearRegression": -3.448533878344233}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3182915802853357, "overall_mean": 22.074680255214393, "entity_std": 1.3182915802853357}, "R2": {"DecisionTreeRegressor": -1.324961933185106, "LinearRegression": -13.456267042485086}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <usertype> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <to_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 2.1695731356777497, "overall_mean": 22.997459560507995, "entity_std": 2.1695731356777497}, "R2": {"DecisionTreeRegressor": -2.9615096859823855, "LinearRegression": -1.8742556944146491}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.6051569379306345, "overall_mean": 21.854316039137437, "entity_std": 1.6051569379306345}, "R2": {"DecisionTreeRegressor": -1.647145681211011, "LinearRegression": -31.26567260067722}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7036094786654108, "overall_mean": 23.069947093956202, "entity_std": 1.7036094786654108}, "R2": {"DecisionTreeRegressor": -0.032236644416542726, "LinearRegression": -9.754988091777447}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7548948197071068, "overall_mean": 9.986320750198283, "entity_std": 0.7548948197071068}, "R2": {"DecisionTreeRegressor": -6.537995222577377, "LinearRegression": -105.81987490010867}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <tripduration> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9821822469946149, "overall_mean": 9.741640123339854, "entity_std": 0.9821822469946149}, "R2": {"DecisionTreeRegressor": -6.165660857723561, "LinearRegression": -60.15794674670095}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <tripduration> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9488176791134818, "overall_mean": 9.904419454664923, "entity_std": 0.9488176791134818}, "R2": {"DecisionTreeRegressor": -75.76561139286859, "LinearRegression": -239.38569177615838}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.018827077058473, "overall_mean": 30.952, "entity_std": 10.018827077058473}, "R2": {"DecisionTreeRegressor": -3.5011691022964557, "LinearRegression": -6.08100390508213}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <temperature> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.452857110782444, "overall_mean": 28.408, "entity_std": 11.452857110782444}, "R2": {"DecisionTreeRegressor": -3.5691714920746285, "LinearRegression": -2.990181642382973}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <temperature> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.32392638485959, "overall_mean": 31.888, "entity_std": 10.32392638485959}, "R2": {"DecisionTreeRegressor": -6.141029652388456, "LinearRegression": -8.09228149152611}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.5467254496078267, "overall_mean": 21.817482358320554, "entity_std": 1.5467254496078267}, "R2": {"DecisionTreeRegressor": -3.080120064670843, "LinearRegression": -3.803128359275327}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.9231616373622513, "overall_mean": 23.35472449614714, "entity_std": 1.9231616373622513}, "R2": {"DecisionTreeRegressor": 0.09860933079292522, "LinearRegression": -6.586002685619507}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 2.3425533912677388, "overall_mean": 23.380211915312927, "entity_std": 2.3425533912677388}, "R2": {"DecisionTreeRegressor": -0.0931609111075895, "LinearRegression": -7.665983172404021}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <hour> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <from_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7019898602989233, "overall_mean": 21.147729519121214, "entity_std": 0.7019898602989233}, "R2": {"DecisionTreeRegressor": -3.191208676028051, "LinearRegression": -4.904191409087592}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.4653930124164936, "overall_mean": 22.192667955848204, "entity_std": 1.4653930124164936}, "R2": {"DecisionTreeRegressor": -0.010370911175676678, "LinearRegression": -4.813956999295961}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9151726924732095, "overall_mean": 10.228991422527463, "entity_std": 0.9151726924732095}, "R2": {"DecisionTreeRegressor": -45.67812411176452, "LinearRegression": -25.043267839418167}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <tripduration> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7313357697600911, "overall_mean": 9.409232896981088, "entity_std": 0.7313357697600911}, "R2": {"DecisionTreeRegressor": -65.76716485377938, "LinearRegression": -78.86486517043305}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.381373011358267, "overall_mean": 30.622769597330112, "entity_std": 10.381373011358267}, "R2": {"DecisionTreeRegressor": -16.21141676609239, "LinearRegression": -3.7496280565304314}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <temperature> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.358930545219648, "overall_mean": 30.57690765788824, "entity_std": 10.358930545219648}, "R2": {"DecisionTreeRegressor": -9.096711372950997, "LinearRegression": -3.333303137595145}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7267926706471617, "overall_mean": 21.222451700498077, "entity_std": 0.7267926706471617}, "R2": {"DecisionTreeRegressor": 0.3065734606268612, "LinearRegression": -12.598750599008028}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.4680913364667887, "overall_mean": 22.25646398116883, "entity_std": 1.4680913364667887}, "R2": {"DecisionTreeRegressor": -0.39532653351754465, "LinearRegression": -13.256838580643524}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3160938575811336, "overall_mean": 22.006789180083892, "entity_std": 1.3160938575811336}, "R2": {"DecisionTreeRegressor": -0.6016347010318428, "LinearRegression": -2.786344484947858}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7896579419764895, "overall_mean": 9.577318063924904, "entity_std": 0.7896579419764895}, "R2": {"DecisionTreeRegressor": -70.17389767354271, "LinearRegression": -65.96009920503592}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.367254788725585, "overall_mean": 30.587804260310808, "entity_std": 10.367254788725585}, "R2": {"DecisionTreeRegressor": -15.649362387807042, "LinearRegression": -3.449040272494239}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3184158166259945, "overall_mean": 22.074602113326012, "entity_std": 1.3184158166259945}, "R2": {"DecisionTreeRegressor": -1.324961933185106, "LinearRegression": -13.450535045362685}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <usertype> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <to_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.1952617598795927, "overall_mean": 21.850572184169273, "entity_std": 1.1952617598795927}, "R2": {"DecisionTreeRegressor": -0.541136017344773, "LinearRegression": -3.6892208116056135}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3204619589501292, "overall_mean": 22.024074032062803, "entity_std": 1.3204619589501292}, "R2": {"DecisionTreeRegressor": -0.10988438668649914, "LinearRegression": -4.003213995270335}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2681838239129613, "overall_mean": 21.888088314025595, "entity_std": 1.2681838239129613}, "R2": {"DecisionTreeRegressor": 0.013239989974727862, "LinearRegression": -0.9280136326174355}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.8118865992835382, "overall_mean": 9.51519444312063, "entity_std": 0.8118865992835382}, "R2": {"DecisionTreeRegressor": -92.78886313179268, "LinearRegression": -69.38246413552831}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <tripduration> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.8055309813077819, "overall_mean": 9.524085027934929, "entity_std": 0.8055309813077819}, "R2": {"DecisionTreeRegressor": -83.7747932782706, "LinearRegression": -75.23973471671182}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <tripduration> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7843748076019798, "overall_mean": 9.542847959124574, "entity_std": 0.7843748076019798}, "R2": {"DecisionTreeRegressor": -70.38370086362717, "LinearRegression": -67.03462355446001}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.426236368477301, "overall_mean": 30.523087568453164, "entity_std": 10.426236368477301}, "R2": {"DecisionTreeRegressor": -15.75725570925885, "LinearRegression": -3.6397933699736393}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <temperature> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.310261702572395, "overall_mean": 30.78707993630414, "entity_std": 10.310261702572395}, "R2": {"DecisionTreeRegressor": -16.888068394853292, "LinearRegression": -4.010795837589611}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <temperature> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.39166786048756, "overall_mean": 30.436776193958902, "entity_std": 10.39166786048756}, "R2": {"DecisionTreeRegressor": -16.04732421566076, "LinearRegression": -3.1275365414725496}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3136078203731705, "overall_mean": 22.104943361297043, "entity_std": 1.3136078203731705}, "R2": {"DecisionTreeRegressor": -0.6789582652676232, "LinearRegression": -12.238796509520283}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2102815003204643, "overall_mean": 21.90064833513707, "entity_std": 1.2102815003204643}, "R2": {"DecisionTreeRegressor": -0.12962584399653898, "LinearRegression": -13.507391995682744}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.205244619241747, "overall_mean": 21.918233318925758, "entity_std": 1.205244619241747}, "R2": {"DecisionTreeRegressor": -0.4162272941603935, "LinearRegression": -12.594847678949005}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.04082350344795021, "overall_mean": 14.55958501402588, "entity_std": 0.04082350344795021}, "R2": {"DecisionTreeRegressor": -8.158322653197258, "LinearRegression": -68.15739952862565}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.11778010968710481, "overall_mean": 16.45846859847576, "entity_std": 0.11778010968710481}, "R2": {"DecisionTreeRegressor": -3.064699453239273, "LinearRegression": -1.8756415957639443}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.4490809418816171, "overall_mean": 18.932850875610555, "entity_std": 0.4490809418816171}, "R2": {"DecisionTreeRegressor": -0.16683217013059948, "LinearRegression": -0.5103091858071556}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.8033175791146995, "overall_mean": 9.966602169820462, "entity_std": 0.8033175791146995}, "R2": {"DecisionTreeRegressor": -1.5842448119170411, "LinearRegression": -30.61726805255803}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7324381842665547, "overall_mean": 9.642024940054673, "entity_std": 0.7324381842665547}, "R2": {"DecisionTreeRegressor": -10.878091871123477, "LinearRegression": -50.502905841739796}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7675671319410319, "overall_mean": 9.485087983100959, "entity_std": 0.7675671319410319}, "R2": {"DecisionTreeRegressor": -57.92922759387654, "LinearRegression": -45.59493388652584}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.388305298085287, "overall_mean": 30.527570939783992, "entity_std": 10.388305298085287}, "R2": {"DecisionTreeRegressor": -6.838604297757147, "LinearRegression": -2.9531269832077793}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.34244040276585, "overall_mean": 30.54476739136193, "entity_std": 10.34244040276585}, "R2": {"DecisionTreeRegressor": -15.45790969762092, "LinearRegression": -2.919327460064695}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.3329601386922, "overall_mean": 30.59815499776119, "entity_std": 10.3329601386922}, "R2": {"DecisionTreeRegressor": -6.890009666122305, "LinearRegression": -3.1863119744279507}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9846684684375407, "overall_mean": 20.10806090168769, "entity_std": 0.9846684684375407}, "R2": {"DecisionTreeRegressor": -0.5775258440225284, "LinearRegression": -9.206176626026897}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.0690194777477242, "overall_mean": 20.76287768208779, "entity_std": 1.0690194777477242}, "R2": {"DecisionTreeRegressor": -0.7352273027999614, "LinearRegression": -14.40758515438621}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2142370584191229, "overall_mean": 21.473402540783468, "entity_std": 1.2142370584191229}, "R2": {"DecisionTreeRegressor": -0.23214469240092253, "LinearRegression": -15.517482700307351}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9315416996102904, "overall_mean": 20.959757984997147, "entity_std": 0.9315416996102904}, "R2": {"DecisionTreeRegressor": -0.3242920800445261, "LinearRegression": -12.660573539420106}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2991595783577246, "overall_mean": 21.708058933397634, "entity_std": 1.2991595783577246}, "R2": {"DecisionTreeRegressor": -0.746620163740539, "LinearRegression": -12.822867592240687}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.4621214606444901, "overall_mean": 22.099008940819058, "entity_std": 1.4621214606444901}, "R2": {"DecisionTreeRegressor": -0.3078008749800867, "LinearRegression": -8.945836323315786}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.04157578675627434, "overall_mean": 3.76346544200866, "entity_std": 0.04157578675627434}, "R2": {"DecisionTreeRegressor": -0.5653090296644219, "LinearRegression": -72.81404312793163}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.08857809572658604, "overall_mean": 5.189278650119544, "entity_std": 0.08857809572658604}, "R2": {"DecisionTreeRegressor": -2.7644837631009045, "LinearRegression": -10.530571465848187}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.20399592145982365, "overall_mean": 6.812153670660186, "entity_std": 0.20399592145982365}, "R2": {"DecisionTreeRegressor": -8.529223580815017, "LinearRegression": -29.96708346582753}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.229291938340054, "overall_mean": 30.52763218945765, "entity_std": 10.229291938340054}, "R2": {"DecisionTreeRegressor": -14.775100677775532, "LinearRegression": -2.1953847069420265}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.286436786589212, "overall_mean": 30.53669336635925, "entity_std": 10.286436786589212}, "R2": {"DecisionTreeRegressor": -14.621188838405484, "LinearRegression": -2.4909412496427894}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.30724510763426, "overall_mean": 30.562145215671745, "entity_std": 10.30724510763426}, "R2": {"DecisionTreeRegressor": -7.223514343906303, "LinearRegression": -2.8013807233567407}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9099222632791962, "overall_mean": 21.06994952352958, "entity_std": 0.9099222632791962}, "R2": {"DecisionTreeRegressor": -0.38424696531453084, "LinearRegression": -14.825398155085963}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.3239246490811234, "overall_mean": 21.80904255015715, "entity_std": 1.3239246490811234}, "R2": {"DecisionTreeRegressor": -0.05544090472752994, "LinearRegression": -17.386000866332225}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.432351705647924, "overall_mean": 22.140242608895722, "entity_std": 1.432351705647924}, "R2": {"DecisionTreeRegressor": -0.17975551166794723, "LinearRegression": -15.7325334641918}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 1.2971622363417399, "overall_mean": 21.818007390623762, "entity_std": 1.2971622363417399}, "R2": {"DecisionTreeRegressor": 0.1441610104400992, "LinearRegression": -21.30541380088461}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 1.2967042179473809, "overall_mean": 22.1463108996925, "entity_std": 1.2967042179473809}, "R2": {"DecisionTreeRegressor": -0.3258972951496155, "LinearRegression": -51.78295495456668}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 0.3466129245012877, "overall_mean": 9.276835780385728, "entity_std": 0.3466129245012877}, "R2": {"DecisionTreeRegressor": -3.936629592745038, "LinearRegression": -714.7325531588368}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 0.39820687049414805, "overall_mean": 9.396011576048446, "entity_std": 0.39820687049414805}, "R2": {"DecisionTreeRegressor": 0.33566487270644496, "LinearRegression": -630.458381776856}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 7.841816176738985, "overall_mean": 26.262969545350142, "entity_std": 7.841816176738985}, "R2": {"DecisionTreeRegressor": -1.2512761628128817, "LinearRegression": -1631.625765275534}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 8.575166135086846, "overall_mean": 28.291536507053955, "entity_std": 8.575166135086846}, "R2": {"DecisionTreeRegressor": -0.21324823988204392, "LinearRegression": -62.70467651018221}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 1.5612679675814616, "overall_mean": 22.046664470887173, "entity_std": 1.5612679675814616}, "R2": {"DecisionTreeRegressor": -0.6664578741500136, "LinearRegression": -15.871415688023223}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 1.3177708660830607, "overall_mean": 22.243559400238038, "entity_std": 1.3177708660830607}, "R2": {"DecisionTreeRegressor": -0.6713851511960626, "LinearRegression": -55.93912477738333}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9938501828931261, "overall_mean": 20.02073616448122, "entity_std": 0.9938501828931261}, "R2": {"DecisionTreeRegressor": -1.5530828941280737, "LinearRegression": -1.0775722384912476}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.0829616635104904, "overall_mean": 20.662770666221675, "entity_std": 1.0829616635104904}, "R2": {"DecisionTreeRegressor": -0.057939959225641095, "LinearRegression": -0.6483379336044612}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2092579364973315, "overall_mean": 21.41277328578325, "entity_std": 1.2092579364973315}, "R2": {"DecisionTreeRegressor": -0.21519553180775053, "LinearRegression": -3.009974139080263}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_start> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7381209154556614, "overall_mean": 9.841494952154026, "entity_std": 0.7381209154556614}, "R2": {"DecisionTreeRegressor": -32.50220648165175, "LinearRegression": -38.57234169332376}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7407414551988701, "overall_mean": 9.686109828397205, "entity_std": 0.7407414551988701}, "R2": {"DecisionTreeRegressor": -39.90545594061326, "LinearRegression": -59.57753429510314}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <tripduration> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7530608750783846, "overall_mean": 9.515006351880343, "entity_std": 0.7530608750783846}, "R2": {"DecisionTreeRegressor": -60.166795832835135, "LinearRegression": -73.76998815374294}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <tripduration> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the average of <temperature> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.261967600107992, "overall_mean": 30.708823679839963, "entity_std": 10.261967600107992}, "R2": {"DecisionTreeRegressor": -16.953131130145096, "LinearRegression": -3.456374067767814}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.289693143088698, "overall_mean": 30.66926934145788, "entity_std": 10.289693143088698}, "R2": {"DecisionTreeRegressor": -15.8693313198074, "LinearRegression": -3.2334679225916076}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <temperature> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338124445377492, "overall_mean": 30.59006617178651, "entity_std": 10.338124445377492}, "R2": {"DecisionTreeRegressor": -16.19228601250034, "LinearRegression": -3.196011143887502}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <temperature> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.034836161141672796, "overall_mean": 14.579364069142194, "entity_std": 0.034836161141672796}, "R2": {"DecisionTreeRegressor": -7.461325399269359, "LinearRegression": -127.15357571516952}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0982597318286078, "overall_mean": 16.46211855718762, "entity_std": 0.0982597318286078}, "R2": {"DecisionTreeRegressor": -0.06322500521780738, "LinearRegression": -5.185381120831496}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.46638981086522246, "overall_mean": 18.997228111733644, "entity_std": 0.46638981086522246}, "R2": {"DecisionTreeRegressor": -1.1865224647128652, "LinearRegression": -13.698015887204484}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the average of <dpcapacity_end> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.569502768962457, "overall_mean": 53.39, "entity_std": 4.569502768962457}, "R2": {"DecisionTreeRegressor": -0.17724993354658358, "LinearRegression": -43.162746996628535}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.424273617798434, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8.574450005037576, "overall_mean": 41.269333333333336, "entity_std": 8.574450005037576}, "R2": {"DecisionTreeRegressor": -4.778953828745671, "LinearRegression": -5.705025877942271}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6.634683413698049, "overall_mean": 48.04266666666666, "entity_std": 6.634683413698049}, "R2": {"DecisionTreeRegressor": -0.3410288222389519, "LinearRegression": -9.4460294406854}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.886955598798264, "overall_mean": 50.75933333333333, "entity_std": 5.886955598798264}, "R2": {"DecisionTreeRegressor": 0.17313170602901573, "LinearRegression": -0.9950464626713345}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.424273617798434, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7083325203250097, "overall_mean": 50.04, "entity_std": 1.7083325203250097}, "R2": {"DecisionTreeRegressor": -2.4285714285714284, "LinearRegression": -125.05908457567978}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.6, "overall_mean": 50.2, "entity_std": 1.6}, "R2": {"DecisionTreeRegressor": -0.1428571428571428, "LinearRegression": -60.08411111390509}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.466424222385869, "overall_mean": 50.36, "entity_std": 1.466424222385869}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.569502768962457, "overall_mean": 53.39, "entity_std": 4.569502768962457}, "R2": {"DecisionTreeRegressor": -0.5632870498963143, "LinearRegression": -43.16274699662888}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.569502768962457, "overall_mean": 53.39, "entity_std": 4.569502768962457}, "R2": {"DecisionTreeRegressor": -0.1979893734264, "LinearRegression": -43.16274699662888}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.569502768962457, "overall_mean": 53.39, "entity_std": 4.569502768962457}, "R2": {"DecisionTreeRegressor": -0.21983587250102987, "LinearRegression": -43.16274699662888}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.424273617798434, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.424273617798434, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7083325203250097, "overall_mean": 50.04, "entity_std": 1.7083325203250097}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.466424222385869, "overall_mean": 50.36, "entity_std": 1.466424222385869}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.466424222385869, "overall_mean": 50.36, "entity_std": 1.466424222385869}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 3.5489493265351153, "overall_mean": 49.36363636363637, "entity_std": 3.5489493265351153}, "R2": {"DecisionTreeRegressor": -0.33333333333333326, "LinearRegression": -38.07401226873976}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 9.068577527377945, "overall_mean": 50.731060606060616, "entity_std": 9.068577527377945}, "R2": {"DecisionTreeRegressor": -0.6479029863964803, "LinearRegression": -13.614198386248141}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 7.3807279199344, "overall_mean": 37.54090909090909, "entity_std": 7.3807279199344}, "R2": {"DecisionTreeRegressor": -20.291396314129166, "LinearRegression": -15.883730846908543}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 4.849171352913543, "overall_mean": 49.59090909090909, "entity_std": 4.849171352913543}, "R2": {"DecisionTreeRegressor": -0.1428571428571428, "LinearRegression": -97.5869921153013}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7083325203250097, "overall_mean": 50.04, "entity_std": 1.7083325203250097}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -0.7719021880003021}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 9.93771303894636, "overall_mean": 40.96866666666667, "entity_std": 9.93771303894636}, "R2": {"DecisionTreeRegressor": -1.0794666201691872, "LinearRegression": -32.87082057198312}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6.321611960392524, "overall_mean": 47.91, "entity_std": 6.321611960392524}, "R2": {"DecisionTreeRegressor": -1.4164966678875217, "LinearRegression": -86.50072409954085}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.879099931111905, "overall_mean": 49.46133333333333, "entity_std": 5.879099931111905}, "R2": {"DecisionTreeRegressor": -0.48677999463915694, "LinearRegression": -53.40757243718913}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <from_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7083325203250097, "overall_mean": 47.96, "entity_std": 1.7083325203250097}, "R2": {"DecisionTreeRegressor": -1.1333333333333333, "LinearRegression": -10.149263608156181}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.550688205579157, "overall_mean": 52.212666666666664, "entity_std": 5.550688205579157}, "R2": {"DecisionTreeRegressor": -1.2100964333907478, "LinearRegression": -18.656265580648157}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <tripduration> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8.41537650837904, "overall_mean": 44.32066666666667, "entity_std": 8.41537650837904}, "R2": {"DecisionTreeRegressor": -1.7403194989367756, "LinearRegression": -13.083108770239026}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -9.556440312136807, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <temperature> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.405793770779814, "overall_mean": 34.684, "entity_std": 10.405793770779814}, "R2": {"DecisionTreeRegressor": -20.297253860202552, "LinearRegression": -10.381314296024993}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.466424222385869, "overall_mean": 50.36, "entity_std": 1.466424222385869}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.9200000000000002, "overall_mean": 48.44, "entity_std": 1.9200000000000002}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": -2.498674302558381}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.569502768962457, "overall_mean": 53.39, "entity_std": 4.569502768962457}, "R2": {"DecisionTreeRegressor": -0.26179261953899857, "LinearRegression": -43.16274699662888}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <usertype> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <to_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 2.5499803920814763, "overall_mean": 48.76, "entity_std": 2.5499803920814763}, "R2": {"DecisionTreeRegressor": -3.0, "LinearRegression": -14.173378687599234}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 3.919183588453085, "overall_mean": 45.4, "entity_std": 3.919183588453085}, "R2": {"DecisionTreeRegressor": -7.0, "LinearRegression": -174.06552153421828}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 2.3515101530718514, "overall_mean": 47.48, "entity_std": 2.3515101530718514}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -4.999457700133343}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 9.160516724872384, "overall_mean": 39.24666666666667, "entity_std": 9.160516724872384}, "R2": {"DecisionTreeRegressor": -2.0015895522037885, "LinearRegression": -176.52900815133975}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <tripduration> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.290985863855193, "overall_mean": 38.529333333333334, "entity_std": 11.290985863855193}, "R2": {"DecisionTreeRegressor": -2.100284408871413, "LinearRegression": -112.25820668147732}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <tripduration> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8.59089373180178, "overall_mean": 38.800666666666665, "entity_std": 8.59089373180178}, "R2": {"DecisionTreeRegressor": -1.1194935148908556, "LinearRegression": -4.616148243267671}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.018827077058473, "overall_mean": 30.952, "entity_std": 10.018827077058473}, "R2": {"DecisionTreeRegressor": -8.428308977035492, "LinearRegression": -6.081003905081672}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <temperature> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.452857110782444, "overall_mean": 28.408, "entity_std": 11.452857110782444}, "R2": {"DecisionTreeRegressor": -3.9493259051295553, "LinearRegression": -2.9901816423870105}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <temperature> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.32392638485959, "overall_mean": 31.888, "entity_std": 10.32392638485959}, "R2": {"DecisionTreeRegressor": -14.131181427889969, "LinearRegression": -8.092281491526796}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 3.6274508956014833, "overall_mean": 46.04, "entity_std": 3.6274508956014833}, "R2": {"DecisionTreeRegressor": -0.1428571428571428, "LinearRegression": -90.61602075523258}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 3.1999999999999997, "overall_mean": 47.8, "entity_std": 3.1999999999999997}, "R2": {"DecisionTreeRegressor": -1.0, "LinearRegression": -18.449454741910266}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.079215610874227, "overall_mean": 45.4, "entity_std": 4.079215610874227}, "R2": {"DecisionTreeRegressor": -2.3548387096774195, "LinearRegression": -12.464107793813806}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <hour> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <from_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7083325203250097, "overall_mean": 47.96, "entity_std": 1.7083325203250097}, "R2": {"DecisionTreeRegressor": -1.1333333333333333, "LinearRegression": -10.149263608155987}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8.41537650837904, "overall_mean": 44.32066666666667, "entity_std": 8.41537650837904}, "R2": {"DecisionTreeRegressor": -2.072650091559675, "LinearRegression": -13.083108770239026}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <tripduration> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.550688205579157, "overall_mean": 52.212666666666664, "entity_std": 5.550688205579157}, "R2": {"DecisionTreeRegressor": -1.4546210866218336, "LinearRegression": -18.656265580648576}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.405793770779814, "overall_mean": 34.684, "entity_std": 10.405793770779814}, "R2": {"DecisionTreeRegressor": -20.418907521168848, "LinearRegression": -10.38131429602498}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <temperature> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.9200000000000002, "overall_mean": 48.44, "entity_std": 1.9200000000000002}, "R2": {"DecisionTreeRegressor": -1.0, "LinearRegression": -2.498674302558381}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.466424222385869, "overall_mean": 50.36, "entity_std": 1.466424222385869}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.569502768962457, "overall_mean": 53.39, "entity_std": 4.569502768962457}, "R2": {"DecisionTreeRegressor": -0.21983587250102987, "LinearRegression": -43.16274699662888}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <usertype> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <to_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.8659046063504963, "overall_mean": 49.72, "entity_std": 1.8659046063504963}, "R2": {"DecisionTreeRegressor": -0.33333333333333326, "LinearRegression": -36.5329894904775}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.783836717690617, "overall_mean": 50.84, "entity_std": 0.783836717690617}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.085172797300043, "overall_mean": 50.68, "entity_std": 1.085172797300043}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.954116185930164, "overall_mean": 52.666000000000004, "entity_std": 5.954116185930164}, "R2": {"DecisionTreeRegressor": -0.045139485702399666, "LinearRegression": -18.366839044153515}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <tripduration> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.898682362522487, "overall_mean": 52.72, "entity_std": 4.898682362522487}, "R2": {"DecisionTreeRegressor": -0.934027841424047, "LinearRegression": -11.003657713777274}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <tripduration> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 4.644447293991684, "overall_mean": 53.224, "entity_std": 4.644447293991684}, "R2": {"DecisionTreeRegressor": -0.1721794970250854, "LinearRegression": -42.509056397144064}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <temperature> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <temperature> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7083325203250097, "overall_mean": 50.04, "entity_std": 1.7083325203250097}, "R2": {"DecisionTreeRegressor": -0.33333333333333326, "LinearRegression": -35.31770746565012}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.2998461447417538, "overall_mean": 50.52, "entity_std": 1.2998461447417538}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 15.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 19.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 27.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6.488014796530602, "overall_mean": 49.692, "entity_std": 6.488014796530602}, "R2": {"DecisionTreeRegressor": -3.444031836150574, "LinearRegression": -35.15399955159277}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.220538243855279, "overall_mean": 51.87266666666667, "entity_std": 5.220538243855279}, "R2": {"DecisionTreeRegressor": -0.4540016601975434, "LinearRegression": -42.96237748631663}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.291553017152275, "overall_mean": 52.79333333333334, "entity_std": 5.291553017152275}, "R2": {"DecisionTreeRegressor": 0.09701950196273978, "LinearRegression": -13.336676096316474}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.424273617798434, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215534917}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.852133904446436, "overall_mean": 47.64, "entity_std": 1.852133904446436}, "R2": {"DecisionTreeRegressor": -1.7826086956521738, "LinearRegression": -8.045446123724025}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.8659046063504958, "overall_mean": 48.28, "entity_std": 1.8659046063504958}, "R2": {"DecisionTreeRegressor": -1.6666666666666665, "LinearRegression": -10.7217140501516}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.9595917942265424, "overall_mean": 49.4, "entity_std": 1.9595917942265424}, "R2": {"DecisionTreeRegressor": -2.3333333333333335, "LinearRegression": -34.62373789475355}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.781684596105607, "overall_mean": 46.84, "entity_std": 1.781684596105607}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.6, "overall_mean": 47.8, "entity_std": 1.6}, "R2": {"DecisionTreeRegressor": -0.1428571428571428, "LinearRegression": -5.5364158853363765}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.8659046063504963, "overall_mean": 48.28, "entity_std": 1.8659046063504963}, "R2": {"DecisionTreeRegressor": -1.1333333333333333, "LinearRegression": -0.4690750877898209}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 8.881784197001252e-16, "overall_mean": 5.116666666666665, "entity_std": 8.881784197001252e-16}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0032659863237110664, "overall_mean": 8.149333333333335, "entity_std": 0.0032659863237110664}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.007118052168021228, "overall_mean": 12.86266666666667, "entity_std": 0.007118052168021228}, "R2": {"DecisionTreeRegressor": -0.3333333333339017, "LinearRegression": -40.03312571818507}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.424273617798434, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.7959955456514918, "overall_mean": 48.12, "entity_std": 1.7959955456514918}, "R2": {"DecisionTreeRegressor": -1.5, "LinearRegression": -10.278857422646594}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.9595917942265424, "overall_mean": 48.6, "entity_std": 1.9595917942265424}, "R2": {"DecisionTreeRegressor": -1.5, "LinearRegression": -22.374837211817372}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.9983993594874874, "overall_mean": 49.08, "entity_std": 1.9983993594874874}, "R2": {"DecisionTreeRegressor": -2.2, "LinearRegression": -45.78623934594262}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 1.9078784028338913, "overall_mean": 49.6, "entity_std": 1.9078784028338913}, "R2": {"DecisionTreeRegressor": -2.4999999999999987, "LinearRegression": -311.9692204319683}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 1.3471246421591017, "overall_mean": 50.47826086956522, "entity_std": 1.3471246421591017}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 8.451354715533942, "overall_mean": 49.244166666666665, "entity_std": 8.451354715533942}, "R2": {"DecisionTreeRegressor": -0.8270508736432924, "LinearRegression": -576.2014487843353}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 7.051377153773249, "overall_mean": 50.6840579710145, "entity_std": 7.051377153773249}, "R2": {"DecisionTreeRegressor": -7.856070230038761, "LinearRegression": -274.9246235570533}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 6.932055972076395, "overall_mean": 29.359999999999996, "entity_std": 6.932055972076395}, "R2": {"DecisionTreeRegressor": -1.827800674409891, "LinearRegression": -2189.5057695718097}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 7.860263539548347, "overall_mean": 31.88695652173913, "entity_std": 7.860263539548347}, "R2": {"DecisionTreeRegressor": -1.6782074770982915, "LinearRegression": -84.86320913880131}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 1.9595917942265424, "overall_mean": 49.4, "entity_std": 1.9595917942265424}, "R2": {"DecisionTreeRegressor": -1.799999999999999, "LinearRegression": -80.79557692239078}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 1.7564356414542746, "overall_mean": 49.95652173913044, "entity_std": 1.7564356414542746}, "R2": {"DecisionTreeRegressor": -7.0, "LinearRegression": -1206.5870880662053}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.6, "overall_mean": 47.8, "entity_std": 1.6}, "R2": {"DecisionTreeRegressor": -1.6666666666666667, "LinearRegression": -12.316046959055209}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.8659046063504963, "overall_mean": 48.28, "entity_std": 1.8659046063504963}, "R2": {"DecisionTreeRegressor": -1.5, "LinearRegression": -30.228112280975253}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 1.9983993594874874, "overall_mean": 48.92, "entity_std": 1.9983993594874874}, "R2": {"DecisionTreeRegressor": -0.06666666666666665, "LinearRegression": -22.739171387730156}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_start> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6.763391194101111, "overall_mean": 49.44466666666667, "entity_std": 6.763391194101111}, "R2": {"DecisionTreeRegressor": -0.6800140022470544, "LinearRegression": -6.783431064774341}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 6.396826157469725, "overall_mean": 50.83533333333333, "entity_std": 6.396826157469725}, "R2": {"DecisionTreeRegressor": -1.172312269467072, "LinearRegression": -1.4124583565950015}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 5.326420770294272, "overall_mean": 52.007999999999996, "entity_std": 5.326420770294272}, "R2": {"DecisionTreeRegressor": -1.9423032169134096, "LinearRegression": -1.0104440416027232}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <tripduration> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.62611323260833, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.338505888183262, "overall_mean": 34.764, "entity_std": 10.338505888183262}, "R2": {"DecisionTreeRegressor": -20.424273617798434, "LinearRegression": -9.730125215535026}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <temperature> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 15.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 19.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 27.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the maximum of <dpcapacity_end> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538653}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.30857600165220966, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.9748846085563152, "overall_mean": 28.36, "entity_std": 0.9748846085563152}, "R2": {"DecisionTreeRegressor": -0.1428571428571428, "LinearRegression": -49.08901777983886}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 20.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 16.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.06395831976112779, "overall_mean": 2.074, "entity_std": 0.06395831976112779}, "R2": {"DecisionTreeRegressor": -0.322502142245072, "LinearRegression": -9.827494764588879}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.03335998934185814, "overall_mean": 2.0239999999999996, "entity_std": 0.03335998934185814}, "R2": {"DecisionTreeRegressor": -6.808383233533004, "LinearRegression": -52.9213353191102}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.016329931618554464, "overall_mean": 2.01, "entity_std": 0.016329931618554464}, "R2": {"DecisionTreeRegressor": -1.75, "LinearRegression": -43.3320002651427}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.348797293105555, "overall_mean": 24.600000000000005, "entity_std": 11.348797293105555}, "R2": {"DecisionTreeRegressor": -0.30857600165220966, "LinearRegression": -1.11020549439472}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.30857600165220966, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.09544093349855419, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.00711805216802047, "overall_mean": 12.870666666666667, "entity_std": 0.00711805216802047}, "R2": {"DecisionTreeRegressor": -0.3333333333327648, "LinearRegression": -40.0331257182254}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0032659863237110664, "overall_mean": 8.167333333333332, "entity_std": 0.0032659863237110664}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.003265986323710893, "overall_mean": 5.150666666666667, "entity_std": 0.003265986323710893}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.13855328376703846, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.30857600165220966, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.25991325898389117, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 0.8331955809010619, "overall_mean": 11.181818181818182, "entity_std": 0.8331955809010619}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 0.09701999169180954, "overall_mean": 2.025, "entity_std": 0.09701999169180954}, "R2": {"DecisionTreeRegressor": -0.125, "LinearRegression": -730.3640613535233}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 4.481467808543119, "overall_mean": 30.90909090909091, "entity_std": 4.481467808543119}, "R2": {"DecisionTreeRegressor": -7.022455937451056, "LinearRegression": -1.8978157577859789}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.06948700917757537, "overall_mean": 2.0706666666666664, "entity_std": 0.06948700917757537}, "R2": {"DecisionTreeRegressor": -0.12112112112112229, "LinearRegression": -7.708609108265837}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.02788866755113588, "overall_mean": 2.0166666666666666, "entity_std": 0.02788866755113588}, "R2": {"DecisionTreeRegressor": -1.1333333333333333, "LinearRegression": -33.307285499024054}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.017713773674115224, "overall_mean": 2.0086666666666666, "entity_std": 0.017713773674115224}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -12.056038815673041}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.176356472482436, "overall_mean": 24.684, "entity_std": 11.176356472482436}, "R2": {"DecisionTreeRegressor": -0.19531572697232513, "LinearRegression": -1.2080785179110038}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.039291615035109695, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.13351920693928132, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.8138795979750322, "overall_mean": 28.24, "entity_std": 0.8138795979750322}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 20.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 16.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <from_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.005416025603090621, "overall_mean": 2.002, "entity_std": 0.005416025603090621}, "R2": {"DecisionTreeRegressor": -7.0, "LinearRegression": -6.608347891926742}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <tripduration> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.10886484995422334, "overall_mean": 2.102, "entity_std": 0.10886484995422334}, "R2": {"DecisionTreeRegressor": -3.3220338983050803, "LinearRegression": -19.13896772750313}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.30857600165220966, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <temperature> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.40313220128575, "overall_mean": 24.724, "entity_std": 11.40313220128575}, "R2": {"DecisionTreeRegressor": 0.18885177681651444, "LinearRegression": -2.9308790231622632}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538653}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.3977437009500205, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <usertype> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <to_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.7838367176906171, "overall_mean": 11.16, "entity_std": 0.7838367176906171}, "R2": {"DecisionTreeRegressor": 0.0, "LinearRegression": 0.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.09379410073844378, "overall_mean": 2.0893333333333333, "entity_std": 0.09379410073844378}, "R2": {"DecisionTreeRegressor": -20.625000000000068, "LinearRegression": -1441.2601974732}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <tripduration> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.1842534486334878, "overall_mean": 2.155333333333333, "entity_std": 0.1842534486334878}, "R2": {"DecisionTreeRegressor": -0.388636363636363, "LinearRegression": -18.905466093084563}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <tripduration> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.18738670651296954, "overall_mean": 2.142, "entity_std": 0.18738670651296954}, "R2": {"DecisionTreeRegressor": -5.707682184569839, "LinearRegression": -36.50281197795445}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.018827077058473, "overall_mean": 30.952, "entity_std": 10.018827077058473}, "R2": {"DecisionTreeRegressor": -3.247306889352818, "LinearRegression": -6.081003905081772}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <temperature> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.452857110782444, "overall_mean": 28.408, "entity_std": 11.452857110782444}, "R2": {"DecisionTreeRegressor": -3.4364743977175984, "LinearRegression": -2.990181642386892}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <temperature> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 10.32392638485959, "overall_mean": 31.888, "entity_std": 10.32392638485959}, "R2": {"DecisionTreeRegressor": -5.828266456024088, "LinearRegression": -8.092281491526787}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <hour> equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <from_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.10886484995422334, "overall_mean": 2.102, "entity_std": 0.10886484995422334}, "R2": {"DecisionTreeRegressor": -0.33050847457627186, "LinearRegression": -19.13896772750313}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <tripduration> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.005416025603090621, "overall_mean": 2.002, "entity_std": 0.005416025603090621}, "R2": {"DecisionTreeRegressor": -1.2857142857142856, "LinearRegression": -6.608347891926742}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.40313220128575, "overall_mean": 24.724, "entity_std": 11.40313220128575}, "R2": {"DecisionTreeRegressor": -0.28062202266878344, "LinearRegression": -2.9308790231622632}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <temperature> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.13351920693928132, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538653}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.30857600165220966, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <usertype> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <to_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538978}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <tripduration> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538978}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <tripduration> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.007717224601860123, "overall_mean": 2.0026666666666664, "entity_std": 0.007717224601860123}, "R2": {"DecisionTreeRegressor": -0.5483870967741935, "LinearRegression": -2.2863101084242783}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.13351920693928132, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <temperature> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.2355689797604298, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <temperature> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.13351920693928132, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.023228335186912377, "overall_mean": 2.0126666666666666, "entity_std": 0.023228335186912377}, "R2": {"DecisionTreeRegressor": -0.25, "LinearRegression": -26.667125826598173}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.008844332774281035, "overall_mean": 2.0046666666666666, "entity_std": 0.008844332774281035}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -9.902603998474998}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.005416025603090621, "overall_mean": 2.002, "entity_std": 0.005416025603090621}, "R2": {"DecisionTreeRegressor": -7.0, "LinearRegression": -43.659954996454026}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.1394310202395701, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.1821819496075998, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.6124277158199092, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538653}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538653}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.004521553322083496, "overall_mean": 2.001333333333333, "entity_std": 0.004521553322083496}, "R2": {"DecisionTreeRegressor": -5.857142857142857, "LinearRegression": -11.481445772538653}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.4432827344072697, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.13351920693928132, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.1821819496075998, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 0.07254787691203952, "overall_mean": 2.0258333333333334, "entity_std": 0.07254787691203952}, "R2": {"DecisionTreeRegressor": -0.07523510971786873, "LinearRegression": -9.926982935752575}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 0.005613019342329571, "overall_mean": 2.002173913043478, "entity_std": 0.005613019342329571}, "R2": {"DecisionTreeRegressor": -7.0, "LinearRegression": -694.0788712603421}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 10.232540007251377, "overall_mean": 21.225, "entity_std": 10.232540007251377}, "R2": {"DecisionTreeRegressor": 0.7149596195939316, "LinearRegression": -49.661282199505685}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 10.792880801363392, "overall_mean": 23.17391304347826, "entity_std": 10.792880801363392}, "R2": {"DecisionTreeRegressor": 0.13351920693928132, "LinearRegression": -638.9753507427582}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_start> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.03275498265743527, "overall_mean": 2.0206666666666666, "entity_std": 0.03275498265743527}, "R2": {"DecisionTreeRegressor": 0.29999999999999993, "LinearRegression": -4.94739085100549}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.013432961119739874, "overall_mean": 2.008, "entity_std": 0.013432961119739874}, "R2": {"DecisionTreeRegressor": -1.0645161290322585, "LinearRegression": -6.165917227988704}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.01054092553389456, "overall_mean": 2.003333333333333, "entity_std": 0.01054092553389456}, "R2": {"DecisionTreeRegressor": -2.4285714285714284, "LinearRegression": -60.066753630713755}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <tripduration> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.13855328376703846, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": -0.30857600165220966, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 11.364790539204847, "overall_mean": 24.555999999999997, "entity_std": 11.364790539204847}, "R2": {"DecisionTreeRegressor": 0.25991325898389117, "LinearRegression": -3.9037388723558877}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <temperature> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"overall_std": 0.0, "overall_mean": 11.0, "entity_std": 0.0}, "R2": {"DecisionTreeRegressor": 1.0, "LinearRegression": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "regression", "template_nl": "Predict the minimum of <dpcapacity_end> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "no threshold"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "no threshold"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.56, "majority_ratio": 0.56}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <dpcapacity_start> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_start> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_start> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <dpcapacity_start> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.2, "majority_ratio": 0.2}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.48, "majority_ratio": 0.48}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <tripduration> greater than 12.85 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.48, "majority_ratio": 0.48}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 12.85 (keep 25.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <tripduration> greater than 8.15 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.48, "majority_ratio": 0.48}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 8.15 (keep 50.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <tripduration> greater than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <tripduration> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"entity_majority_ratio": 0.5454545454545454, "majority_ratio": 0.5454545454545454}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"entity_majority_ratio": 0.5909090909090909, "majority_ratio": 0.5909090909090909}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <temperature> greater than 26.6 in next 1 days", "N_train": 14, "label_stats": {"entity_majority_ratio": 0.36363636363636365, "majority_ratio": 0.36363636363636365}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: 26.6 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <temperature> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.56, "majority_ratio": 0.56}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.875}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.375, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <dpcapacity_end> greater than 27.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.32, "majority_ratio": 0.32}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 27.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_end> greater than 19.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 19.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_end> greater than 15.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: 15.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <dpcapacity_end> greater than __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <from_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <from_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <from_station_id> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.4, "majority_ratio": 0.4}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <gender> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <usertype> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <to_station_id> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.28, "majority_ratio": 0.28}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <gender> equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.375}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <hour> in all related records with <gender> equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <gender> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.375}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <usertype> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <usertype> equal to Subscriber in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: Subscriber"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <usertype> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <to_station_id> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <to_station_id> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.12, "majority_ratio": 0.12}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <from_station_id> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.36, "majority_ratio": 0.36}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <from_station_id> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.24, "majority_ratio": 0.24}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <gender> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <gender> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <usertype> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <usertype> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.36, "majority_ratio": 0.36}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <to_station_id> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.24, "majority_ratio": 0.24}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <to_station_id> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.4, "majority_ratio": 0.4}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <hour> equal to __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <hour> equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <hour> in all related records with <hour> equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <hour> in all related records with <hour> equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <hour> equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <from_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <from_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.4, "majority_ratio": 0.4}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <from_station_id> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <gender> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <usertype> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.28, "majority_ratio": 0.28}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <to_station_id> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <gender> not equal to Male in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: Male"}, {"problem": "Predict the majority of <hour> in all related records with <gender> not equal to Female in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: Female"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <gender> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <usertype> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <usertype> not equal to Customer in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: Customer"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <usertype> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <to_station_id> not equal to __"}, {"evaluations": [], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <to_station_id> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <from_station_id> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.56, "majority_ratio": 0.56}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.375}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <from_station_id> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <gender> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <gender> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <usertype> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <usertype> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <to_station_id> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <to_station_id> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <hour> not equal to 17 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 17"}, {"problem": "Predict the majority of <hour> in all related records with <hour> not equal to 8 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 8"}, {"problem": "Predict the majority of <hour> in all related records with <hour> not equal to 16 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: 16"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <hour> not equal to __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.32, "majority_ratio": 0.32}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.32, "majority_ratio": 0.32}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.375}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.56, "majority_ratio": 0.56}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.48, "majority_ratio": 0.48}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.375}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.48, "majority_ratio": 0.48}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <dpcapacity_start> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_start> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_start> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.36, "majority_ratio": 0.36}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <dpcapacity_start> less than __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.4, "majority_ratio": 0.4}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.48, "majority_ratio": 0.48}, "Accuracy": {"KNeighborsClassifier": 0.375, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.64, "majority_ratio": 0.64}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.28, "majority_ratio": 0.28}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.56, "majority_ratio": 0.56}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.68, "majority_ratio": 0.68}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.75}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <tripduration> less than 5.133333333333334 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.36, "majority_ratio": 0.36}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: 5.133333333333334 (keep 25.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <tripduration> less than 8.166666666666666 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.36, "majority_ratio": 0.36}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 8.166666666666666 (keep 50.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <tripduration> less than 12.883333333333333 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.44, "majority_ratio": 0.44}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.25}, "N_test": 8, "description": "threshold: 12.883333333333333 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <tripduration> less than __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"entity_majority_ratio": 0.5, "majority_ratio": 0.5}, "Accuracy": {"KNeighborsClassifier": 0.14285714285714285, "DecisionTreeClassifier": 0.14285714285714285}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"entity_majority_ratio": 0.6086956521739131, "majority_ratio": 0.6086956521739131}, "Accuracy": {"KNeighborsClassifier": 0.625, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"entity_majority_ratio": 0.35, "majority_ratio": 0.35}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"entity_majority_ratio": 0.5217391304347826, "majority_ratio": 0.5217391304347826}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <temperature> less than 35.1 in next 1 days", "N_train": 11, "label_stats": {"entity_majority_ratio": 0.25, "majority_ratio": 0.25}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 7, "description": "threshold: 35.1 (keep 50.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <temperature> less than 39.0 in next 1 days", "N_train": 13, "label_stats": {"entity_majority_ratio": 0.43478260869565216, "majority_ratio": 0.43478260869565216}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 39.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <temperature> less than __"}, {"evaluations": [{"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.28, "majority_ratio": 0.28}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.36, "majority_ratio": 0.36}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.56, "majority_ratio": 0.56}, "Accuracy": {"KNeighborsClassifier": 0.25, "DecisionTreeClassifier": 0.625}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <from_station_id> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the majority of <gender> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <gender> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <gender> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <usertype> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 1.0, "majority_ratio": 1.0}, "Accuracy": {"KNeighborsClassifier": 1.0, "DecisionTreeClassifier": 1.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <usertype> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.4, "majority_ratio": 0.4}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.125}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.125, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.375, "DecisionTreeClassifier": 0.5}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <to_station_id> in all related records with <dpcapacity_end> less than __"}, {"evaluations": [{"problem": "Predict the majority of <hour> in all related records with <dpcapacity_end> less than 16.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 16.0 (keep 25.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_end> less than 20.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.6, "majority_ratio": 0.6}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 20.0 (keep 50.0%%)"}, {"problem": "Predict the majority of <hour> in all related records with <dpcapacity_end> less than 28.0 in next 1 days", "N_train": 15, "label_stats": {"entity_majority_ratio": 0.56, "majority_ratio": 0.56}, "Accuracy": {"KNeighborsClassifier": 0.0, "DecisionTreeClassifier": 0.0}, "N_test": 8, "description": "threshold: 28.0 (keep 75.0%%)"}], "problem_type": "classification", "template_nl": "Predict the majority of <hour> in all related records with <dpcapacity_end> less than __"}]
